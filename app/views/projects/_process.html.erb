<div class="row">
  <div class="col-md-12">
    <!-- The time line -->
    <ul class="timeline" style=""><!--timeline item -->
      <!--项目合同-->
      <%= render 'projects/process/contract' %>
      <!--预付款-->
      <%= render 'projects/process/advance' %>
      <!--操作模式-->
      <%= render 'projects/process/pattern' %>
      <!--做样板房-->
      <%= render 'projects/process/plate' %>
      <!--完善项目资料-->
      <%= render 'projects/process/detail' %>
      <!--批量订单-->
      <%= render 'projects/process/order' %>
      <!--开票申请-->
      <%= render 'projects/process/invoice' %>
      <!--进度款-->
      <%= render 'projects/process/process_payment' %>
      <!--结算款-->
      <%= render 'projects/process/settlement' %>
      <!--金额确认-->
      <%= render 'projects/process/payment' %>
      <!--保证金-->
      <%= render 'projects/process/bond' %>
      <!--项目结清确认-->
      <%= render 'projects/process/confirm' %>
      <!-- END timeline item -->
      <li>
        <i class="fa fa-clock-o bg-gray"></i>
      </li>
    </ul>
  </div>
  <!-- /.col -->
</div>
<script type="text/javascript">
    function place_order(order_id){
        if(confirm('下单后不可变更，确认下单吗？')){
            showSpinner();
            $.ajax({
                type: 'POST',
                url: '<%= place_order_orders_path %>',
                data: {id: order_id},
                dataType: 'script',
                success: function (data) {

                }
            })
        }
    }

    //删除文件
    function delete_attachment(id, url){
        if(confirm('确认删除该文件吗？')){
            showSpinner();
            $.ajax({
                type: 'POST',
                url: url,
                data: {attachment_id: id},
                dataType: 'script',
                success: function (data) {

                }
            })
        }
    }


    function set_option(name){
        return {
            runtimes: 'html5,html4',          //上传模式,依次退化
            browse_button: name,       //上传选择的点选按钮，**必需**
            uptoken : '<%= @uptoken %>',
            //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
            unique_names: true,
            // 默认 false，key为文件名。若开启该选项，SDK会为每个文件自动生成key（文件名）
            save_key: true,
            // 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK在前端将不对key进行任何处理
            domain: '<%= Rails.application.config.qiniu_domain %>',
            //bucket 域名，下载资源时用到，**必需**
            // container: 'container',           //上传区域DOM ID，默认是browser_button的父元素，
            max_file_size: '50mb',           //最大文件体积限制
            // flash_swf_url: 'js/plupload/Moxie.swf',  //引入flash,相对路径
            max_retries: 3,                   //上传失败最大重试次数
            // dragdrop: true,                   //开启可拖曳上传
            // drop_element: 'container',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
            chunk_size: '4mb',                //分块上传时，每片的体积
            auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传
            init: {
                'FilesAdded': function (up, files) {
                    plupload.each(files, function (file) {
                        // 文件添加进队列后,处理相关的事情
                    });
                },
                'BeforeUpload': function (up, file) {
                    showSpinner();
                    // 加载loading
                    // 每个文件上传前,处理相关的事情
                },
                'UploadProgress': function (up, file) {
                    // 每个文件上传时,处理相关的事情
                },
                'FileUploaded': function (up, file, info) {
                    // 每个文件上传成功后,处理相关的事情
                    // 其中 info 是文件上传成功后，服务端返回的json，形式如
                    // {
                    //    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
                    //    "key": "gogopher.jpg"
                    //  }
                    // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html
                    var domain = up.getOption('domain');
                    console.log(info);
                    var res = $.parseJSON(info.response);
                    // var res = parseJSON(info);
                    var sourceLink = domain + res.key; //
                    // 提交到服务器
                    // console.log(info);
                    console.log(sourceLink);
                    $.ajax({
                        type: 'POST',
                        url: '<%= upload_project_path @project %>',
                        data: {path: res.key, file_name: file.name, name: name},
                        dataType: 'script',
                        success: function (data) {

                        }
                    })
                },
                'Error': function (up, err, errTip) {
                    //上传出错时,处理相关的事情
                    console.log(err);
                    alert('')
                },
                'UploadComplete': function () {
                    //队列文件处理完毕后,处理相关的事情
                    console.log('complete')
                },
                'Key': function (up, file) {
                    // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
                    // 该配置必须要在 unique_names: false , save_key: false 时才生效
                    var key = "";
                    // do something with key here
                    return key
                }
            }
        }
    }
    var contract_qiniu = new QiniuJsSDK();
    var contract_option = set_option('project_contract');
    var contract_uploader = contract_qiniu.uploader(contract_option);

    var advance_qiniu = new QiniuJsSDK();
    var advance_option = set_option('advance');
    var advance_uploader = advance_qiniu.uploader(advance_option);

    var plate_qiniu = new QiniuJsSDK();
    var plate_option = set_option('plate');
    var plate_uploader = plate_qiniu.uploader(plate_option);

    var payments_qiniu = new QiniuJsSDK();
    var payments_option = set_option('payments');
    var payments_uploader = payments_qiniu.uploader(payments_option);

    var settlements_qiniu = new QiniuJsSDK();
    var settlements_option = set_option('settlements');
    var settlements_uploader = settlements_qiniu.uploader(settlements_option);

    var bond_qiniu = new QiniuJsSDK();
    var bond_option = set_option('bond');
    var bond_uploader = bond_qiniu.uploader(bond_option);

    $('.select2').select2();

</script>